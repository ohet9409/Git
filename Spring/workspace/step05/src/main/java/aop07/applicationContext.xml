<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- bean 객체 -->
	<bean id ="messageBean" class="aop07.MessageBeanImpl">
		<property name="name" value="spring"/>
	</bean>
	<!-- advice : 횡단(공통) 관심사항 -->
	<bean id="loggingAdvice" class="aop07.LoggingAdvice"/>
	
	<!-- AOP 설정 -->
	<aop:config>
		<!-- advice 등록 -->
		<aop:aspect id="logAspect" ref="loggingAdvice">
			<!-- 동작시킬 함수를 등록 -->
			<aop:pointcut expression="execution(* sayHello())" id="logPointCut"/>
			<!-- around는 메소드의 호출자체를 가로채 비즈니스 메소드 실행 전후에 처리할 로직을 삽입 -->
			<aop:around method="logAround" pointcut-ref="logPointCut"/>
		</aop:aspect>
	</aop:config>
</beans>
